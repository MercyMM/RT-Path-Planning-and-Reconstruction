--- main1	2017-10-18 20:52:23.342770048 +0800
+++ main2	2017-10-18 20:52:05.142331339 +0800
@@ -1,4 +1,5 @@
 
+
 int DynamicWindowApproach(point* obstacle, int obs_nums,  point goal)
 {
     //1. compute window
@@ -134,7 +135,7 @@
 int Evaluation()
 {
 
-    int tmp_index = -1;
+        int index = -1;
     float eval = 100;
     for(int i = 0; i < DIRECTIONS; i++)
     {
@@ -149,20 +150,15 @@
         if(eval > eval_tmp)
         {
             eval = eval_tmp;
-            tmp_index = i;
+                        index = i;
         }
     }
-    printf(" %d ", tmp_index);
-
-//    sem_wait(&disTooSmall);
-    _index_vola = tmp_index;
-//    sem_post(&disTooSmall);
-
-    return 1;
+        printf("index = %d\n", index);
+        return index;
 }
 
 
-void createObs(const Elas &elas, struct obs_point *obs_arr, \
+void createObs(Elas &elas, struct obs_point *obs_arr, \
                vector<struct point> *obstacle)
 {
     struct timeval start, end;
@@ -174,11 +170,12 @@
     IplImage* img2f = cvCreateImage(cvSize(WIDTH, HEIGH), IPL_DEPTH_8U,1);
     IplImage* img3f = cvCreateImage(cvSize(WIDTH, HEIGH), IPL_DEPTH_8U,1);
 
-//    for(int32_t i = 100*HEIGH; i < 200*HEIGH; i++) {
-//        cout << elas.cloud_c[i].z <<' ';
-//        if(i % HEIGH == 0)
-//            cout<<endl;
-//    }
+
+    for(int32_t i = 100*HEIGH; i < 200*HEIGH; i++) {
+        cout << elas.cloud_c[i].z <<' ';
+        if(i % HEIGH == 0)
+            cout<<endl;
+    }
 
     for (int32_t i=0; i<WIDTH*HEIGH; i++){
         float dis_y = elas.cloud_c[i].y;
@@ -210,20 +207,20 @@
     {
         for(int u = 3; u < 313; u ++)
         {
-            int n = u + v * WIDTH;
-            float dis_y = elas.cloud_c[n].y;
-            float dis_z = elas.cloud_c[n].z;
-            float dis_x = elas.cloud_c[n].x;
-            img3f->imageData[n] = 255;
+            int index = u + v * WIDTH;
+            float dis_y = elas.cloud_c[index].y;
+            float dis_z = elas.cloud_c[index].z;
+            float dis_x = elas.cloud_c[index].x;
+            img3f->imageData[index] = 255;
 
             if( dis_y > -200 && dis_y < 200 )
             {
         //        if ( 10000 < dis_z)
           //          dis_z = 10000;
             //    if(dis_z <= 0)
-              //      img3f->imageData[n] = 255;
+              //      img3f->imageData[index] = 255;
              //   else
-//                    img3f->imageData[n] = (uint8_t)(dis_z / 40);
+//                    img3f->imageData[index] = (uint8_t)(dis_z / 40);
                 if(dis_z < 6000 && dis_z > 0)
                 {
                     //add this point to obstacle
@@ -257,7 +254,7 @@
 
     gettimeofday(&end, NULL);
     timeuse = 1000000* (end.tv_sec-start.tv_sec) + end.tv_usec-start.tv_usec;
-//    printf(" create Obs1---true : %fms\n", timeuse/1000);
+    printf(" create Obs1---true : %fms\n", timeuse/1000);
 
     gettimeofday(&start, NULL);
     //clear not use
@@ -324,3 +321,4 @@
 
 }
 
+
